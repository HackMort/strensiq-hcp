---
type Props = {
  heading?: string;
  items: Array<{
    active?: boolean;
    href: string;
    label: string;
    classes?: Array<string>;
  }>;
  icon: boolean;
};

const { heading, items, icon } = Astro.props;
---

{
  items && (
    <nav class="internal__nav">
      <div class="wrapper internal-nav__container ">
        {
          heading &&
          <h4
            class="internal__nav_heading"
            set:html={heading}
          />
        }


        <ul class="internal__nav_list">
          {items.map((item) => {
            const classes = item.classes ? item.classes.join(" ") : "";
            const active = item.active ? "is--active" : "";
            return (
              <li class={`internal__nav_list_item ${active} ${classes}`}>
                <a
                  href={`#${item.href}`}
                  class="internal__nav_list_item_link"
                  set:html={item.label}
                />
              </li>
            );
          })}


          {
            icon && (
              <li class="internal__nav_list_item internal__nav_expand-icon internal__nav_expand-icon--mobile">
                <a class="internal__nav_expand-icon--anchor" href="#">
                  Study design
                  <img class="internal__nav_expand-icon--img" src="/assets/icons/icon-arrows-expand-blue.svg" alt="incon expand blue" />
                </a>
              </li>
            )
          }

        </ul>

          {
            icon && (
              <p class="internal__nav_expand-icon internal__nav_expand-icon--desktop">
                <a class="internal__nav_expand-icon--anchor" href="#">
                  Study design
                  <img class="internal__nav_expand-icon--img" src="/assets/icons/icon-arrows-expand-blue.svg" alt="incon expand blue" />
                </a>
              </p>
            )
          }
      </div>
    </nav>
  )
}
