---
/**
 * @name Table
 * @description
 * Table Component
 * This component is used to wrap the headers, body and footer of a table
 * title prop: is a string that will be used as the table title (optional)
 * Slots: header, body and footer: is posible to add different structures to the slots
 */

type Props = {
    title?: string; // Table title (optional)
    className?: string; // Class name (optional)
};

const { title, className }: Props = Astro.props;
---

<section class={className ? `table ${className}` : "table"}>
    {
        title && (
            <div class="table__header">
                <div class="table__title">{title}</div>
            </div>
        )
    }
    <div class="table__wrapper">
        <table class="table__content">
            <slot name="header" />
            <slot name="body" />
        </table>
    </div>
    <slot name="footer" />
</section>


<script>
    window.addEventListener('DOMContentLoaded', event => {
        const headerColumns =  document.querySelectorAll('.table__header--mh--cell')
        const maxColumns = headerColumns.length

        const joinRows = document.querySelectorAll('.table__body__row--join')
        if(joinRows) {
            joinRows.forEach(joinRow => {
                const joinCells = joinRow.querySelectorAll('.table__body__cell')
                const joinCellsSize = joinCells.length

                if(joinCellsSize < maxColumns) {
                    const lastCell = joinCells[joinCellsSize - 1]
                    lastCell.colSpan = 1 + (maxColumns - joinCellsSize)
                }
            })
        }
    })
</script>